{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCGA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAQ,SAAS,aAAa,CAAC,SAE/B,EAAY,EAAM,IAAI,CAEtB,EAAa,EAAG,EAAM,IAAI,EAG1B,EAAgB,EAAG,AADT,CAAS,CAAC,EAAE,CACK,QAAQ,EAEzC,EAAM,gBAAgB,CAAC,QAAS,SAAC,CAAjC,EACE,IAAM,EAAO,EAAE,MAAM,CAAC,OAAO,CAAC,MAE9B,GAAK,GAIL,IAAM,EAAQ,EAAa,SAAS,CAClC,SAAC,CADH,EACU,OAAA,EAAG,WAAW,GAAK,EAAK,WAAW,A,GAGvC,EAAW,WACf,OAAQ,EAAK,WAAW,EACtB,IAAK,MACH,MAAO,QAET,KAAK,SACH,MAAO,QAET,SACE,MAAO,MAOX,CACF,EAEM,EAAU,EAAI,GAAW,IAAI,CAAC,SAAC,CAAA,CAAM,CAA3C,EACE,IAAM,EAAU,MAAM,IAAI,CAAC,EAAK,QAAQ,CAAC,CAAC,EAAM,CAAC,WAAW,CACtD,EAAW,MAAM,IAAI,CAAC,EAAK,QAAQ,CAAC,CAAC,EAAM,CAAC,WAAW,CAE7D,GAAI,AAAe,WAAf,IAAyB,CAC3B,IAAM,EAAY,SAAC,CAAnB,EAA8B,OAAA,OAAO,EAAO,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,I,EAErE,OAAO,EAAU,GAAW,EAAU,EACxC,OAEA,AAAI,AAAe,WAAf,IACK,OAAO,GAAW,OAAO,GAG9B,AAAe,SAAf,IACK,EAAQ,aAAa,CAAC,SAEjC,EAEA,CAAA,EAAM,WAAW,CAAG,GAEpB,EAAQ,OAAO,CAAC,SAAC,CAAjB,EACE,EAAM,WAAW,CAAC,EACpB,GACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// write code here\nvar table = document.querySelector(\"table\");\nvar thead = document.querySelector(\"thead\");\nvar tbody = document.querySelector(\"tbody\");\nvar tableRows = table.rows;\nvar tbodyRows = _to_consumable_array(tbody.rows);\nvar headRow = tableRows[0];\nvar headElements = _to_consumable_array(headRow.children);\nthead.addEventListener(\"click\", function(e) {\n    var link = e.target.closest(\"th\");\n    if (!link) return;\n    var index = headElements.findIndex(function(el) {\n        return el.textContent === link.textContent;\n    });\n    var sortType = function() {\n        switch(link.textContent){\n            case \"Age\":\n                return \"number\";\n            case \"Salary\":\n                return \"salary\";\n            case \"Name\":\n                return \"text\";\n            case \"Position\":\n                return \"text\";\n            default:\n                return \"text\";\n        }\n    };\n    var newList = _to_consumable_array(tbodyRows).sort(function(rowA, rowB) {\n        var firstEl = Array.from(rowA.children)[index].textContent;\n        var secondEl = Array.from(rowB.children)[index].textContent;\n        if (sortType() === \"salary\") {\n            var salaryNum = function(salary) {\n                return Number(salary.slice(1).split(\",\").join(\"\"));\n            };\n            return salaryNum(firstEl) - salaryNum(secondEl);\n        }\n        if (sortType() === \"number\") return Number(firstEl) - Number(secondEl);\n        if (sortType() === \"text\") return firstEl.localeCompare(secondEl);\n    });\n    tbody.textContent = \"\";\n    newList.forEach(function(tr) {\n        tbody.appendChild(tr);\n    });\n});\n\n//# sourceMappingURL=index.1b338886.js.map\n","'use strict';\n\n// write code here\nconst table = document.querySelector('table');\nconst thead = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\n\nconst tableRows = table.rows;\n\nconst tbodyRows = [...tbody.rows];\n\nconst headRow = tableRows[0];\nconst headElements = [...headRow.children];\n\nthead.addEventListener('click', (e) => {\n  const link = e.target.closest('th');\n\n  if (!link) {\n    return;\n  }\n\n  const index = headElements.findIndex(\n    (el) => el.textContent === link.textContent,\n  );\n\n  const sortType = () => {\n    switch (link.textContent) {\n      case 'Age':\n        return 'number';\n\n      case 'Salary':\n        return 'salary';\n\n      case 'Name':\n        return 'text';\n\n      case 'Position':\n        return 'text';\n\n      default:\n        return 'text';\n    }\n  };\n\n  const newList = [...tbodyRows].sort((rowA, rowB) => {\n    const firstEl = Array.from(rowA.children)[index].textContent;\n    const secondEl = Array.from(rowB.children)[index].textContent;\n\n    if (sortType() === 'salary') {\n      const salaryNum = (salary) => Number(salary.slice(1).split(',').join(''));\n\n      return salaryNum(firstEl) - salaryNum(secondEl);\n    }\n\n    if (sortType() === 'number') {\n      return Number(firstEl) - Number(secondEl);\n    }\n\n    if (sortType() === 'text') {\n      return firstEl.localeCompare(secondEl);\n    }\n  });\n\n  tbody.textContent = '';\n\n  newList.forEach((tr) => {\n    tbody.appendChild(tr);\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","table","document","querySelector","thead","tbody","tableRows","rows","tbodyRows","headElements","headRow","children","addEventListener","e","link","target","closest","index","findIndex","el","textContent","sortType","newList","sort","rowA","rowB","firstEl","secondEl","salaryNum","salary","Number","split","join","localeCompare","forEach","tr","appendChild"],"version":3,"file":"index.1b338886.js.map"}